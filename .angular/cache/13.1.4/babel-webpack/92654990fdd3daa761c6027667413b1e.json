{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuteursService {\n  constructor(httpClient) {\n    this.httpClient = httpClient; //private auteursRestUrl = 'http://localhost:8080/api/auteurs';\n\n    this.auteursRestUrl = 'http://localhost:9191/api/auteurs';\n    this.awsS3BiographiesRestUrl = 'http://localhost:9191/api/s3documents/biblio-biographies/download/'; //Pour déployer dans mon serveur\n    //private auteursRestUrl = 'http://192.168.1.92:9192/api/auteurs';\n    //Pour déployer dans le cloud aws\n    //private auteursRestUrl = 'http://54.211.191.64:9192/api/auteurs';\n    //private auteursRestUrl = 'http://BIBLIO-BACK-PUBLIC-LOAD-BALANCER-1599167438.us-east-1.elb.amazonaws.com/api/auteurs';\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        //'Access-Control-Allow-Origin':'*',\n        //'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n        'Authorization': 'Basic ' + btoa('rachid:rachid123')\n      })\n    };\n    this.httpOptionsPdf = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/pdf',\n        //'Access-Control-Allow-Origin':'*',\n        //'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n        'Authorization': 'Basic ' + btoa('rachid:rachid123')\n      })\n    };\n  }\n\n  httpErrorHandler(error) {\n    if (error.error instanceof ErrorEvent) {\n      console.error(\"Erreur côté client : \" + error.message);\n    } else {\n      console.error(\"Erreur côté serveur. Le code de l'erreur : \" + error.status + \" et l'erreur retournée : \" + error.message);\n    }\n\n    return throwError(\"Erreur lors de l'appel du service\");\n  }\n\n  getAuteurs() {\n    return this.httpClient.get(this.auteursRestUrl, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  getAuteur(id) {\n    return this.httpClient.get(this.auteursRestUrl + \"/\" + id, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  ajoutAuteur(auteur) {\n    return this.httpClient.post(this.auteursRestUrl + \"/ajout\", auteur, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  majAuteur(auteur) {\n    return this.httpClient.put(this.auteursRestUrl + \"/modification\", auteur, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  supprimeAuteur(auteur) {\n    const id = typeof auteur == 'number' ? auteur : auteur.id;\n    const url = `${this.auteursRestUrl}/suppression/${id}`;\n    return this.httpClient.delete(url, this.httpOptions);\n  }\n\n  getBiographie(nomFichier) {\n    this.httpClient.get(`this.awsS3BiographiesRestUrl${nomFichier}`, {\n      responseType: 'arraybuffer',\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + btoa('rachid:rachid123')\n      })\n    }).subscribe(response => this.downLoadFile(response, \"application/pdf\"));\n    /*return this.httpClient.get<Auteur>(this.awsRestUrl + \"/biblio-biographies/download/\" + nomFichier, this.httpOptions)\r\n    .pipe(\r\n        retry(3),\r\n        catchError(this.httpErrorHandler)\r\n    );*/\n\n    /*return this.httpClient\r\n    .get(this.awsS3BiographiesRestUrl + nomFichier, this.httpOptionsPdf)\r\n    .pipe(\r\n      retry(3),\r\n      catchError(this.httpErrorHandler)\r\n    );*/\n\n    /*const httpOptions = {\r\n      responseType: 'blob' as 'json'\r\n    };*/\n\n    /*const url = `${this.awsS3BiographiesRestUrl}${nomFichier}`;\r\n    return this.httpClient.get<Object>(url, this.httpOptionsPdf);*/\n    //return this.httpClient.get(this.awsS3BiographiesRestUrl + nomFichier, httpOptions);\n\n    /*this.httpClient\r\n    .get(this.awsS3BiographiesRestUrl + nomFichier, {\r\n     // responseType: 'arraybuffer',\r\n      responseType: 'blob' as 'json',\r\n    })\r\n    .subscribe(async (response) => {\r\n      let blob = new Blob([response], { type: 'application/pdf' });\r\n      let url = window.URL.createObjectURL(blob);\r\n      let pwa = window.open(url);\r\n    });*/\n  }\n\n  downLoadFile(data, type) {\n    let blob = new Blob([data], {\n      type: type\n    });\n    let url = window.URL.createObjectURL(blob);\n    let pwa = window.open(url);\n\n    if (!pwa || pwa.closed || typeof pwa.closed == 'undefined') {\n      alert('Please disable your Pop-up blocker and try again.');\n    }\n  }\n\n}\n\nAuteursService.ɵfac = function AuteursService_Factory(t) {\n  return new (t || AuteursService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuteursService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuteursService,\n  factory: AuteursService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/Travail/Angular/Projets-Angular/bibliothque/bibliothque/src/app/auteurs.service.ts"],"names":["throwError","catchError","retry","HttpHeaders","i0","i1","AuteursService","constructor","httpClient","auteursRestUrl","awsS3BiographiesRestUrl","httpOptions","headers","btoa","httpOptionsPdf","httpErrorHandler","error","ErrorEvent","console","message","status","getAuteurs","get","pipe","getAuteur","id","ajoutAuteur","auteur","post","majAuteur","put","supprimeAuteur","url","delete","getBiographie","nomFichier","responseType","subscribe","response","downLoadFile","data","type","blob","Blob","window","URL","createObjectURL","pwa","open","closed","alert","ɵfac","AuteursService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class AuteursService {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n        //private auteursRestUrl = 'http://localhost:8080/api/auteurs';\r\n        this.auteursRestUrl = 'http://localhost:9191/api/auteurs';\r\n        this.awsS3BiographiesRestUrl = 'http://localhost:9191/api/s3documents/biblio-biographies/download/';\r\n        //Pour déployer dans mon serveur\r\n        //private auteursRestUrl = 'http://192.168.1.92:9192/api/auteurs';\r\n        //Pour déployer dans le cloud aws\r\n        //private auteursRestUrl = 'http://54.211.191.64:9192/api/auteurs';\r\n        //private auteursRestUrl = 'http://BIBLIO-BACK-PUBLIC-LOAD-BALANCER-1599167438.us-east-1.elb.amazonaws.com/api/auteurs';\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json',\r\n                //'Access-Control-Allow-Origin':'*',\r\n                //'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n                'Authorization': 'Basic ' + btoa('rachid:rachid123')\r\n            })\r\n        };\r\n        this.httpOptionsPdf = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/pdf',\r\n                //'Access-Control-Allow-Origin':'*',\r\n                //'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n                'Authorization': 'Basic ' + btoa('rachid:rachid123')\r\n            })\r\n        };\r\n    }\r\n    httpErrorHandler(error) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            console.error(\"Erreur côté client : \" + error.message);\r\n        }\r\n        else {\r\n            console.error(\"Erreur côté serveur. Le code de l'erreur : \" + error.status + \" et l'erreur retournée : \" + error.message);\r\n        }\r\n        return throwError(\"Erreur lors de l'appel du service\");\r\n    }\r\n    getAuteurs() {\r\n        return this.httpClient.get(this.auteursRestUrl, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    getAuteur(id) {\r\n        return this.httpClient.get(this.auteursRestUrl + \"/\" + id, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    ajoutAuteur(auteur) {\r\n        return this.httpClient.post(this.auteursRestUrl + \"/ajout\", auteur, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    majAuteur(auteur) {\r\n        return this.httpClient.put(this.auteursRestUrl + \"/modification\", auteur, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    supprimeAuteur(auteur) {\r\n        const id = typeof auteur == 'number' ? auteur : auteur.id;\r\n        const url = `${this.auteursRestUrl}/suppression/${id}`;\r\n        return this.httpClient.delete(url, this.httpOptions);\r\n    }\r\n    getBiographie(nomFichier) {\r\n        this.httpClient.get(`this.awsS3BiographiesRestUrl${nomFichier}`, {\r\n            responseType: 'arraybuffer', headers: new HttpHeaders({ 'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + btoa('rachid:rachid123')\r\n            })\r\n        }).subscribe(response => this.downLoadFile(response, \"application/pdf\"));\r\n        /*return this.httpClient.get<Auteur>(this.awsRestUrl + \"/biblio-biographies/download/\" + nomFichier, this.httpOptions)\r\n        .pipe(\r\n            retry(3),\r\n            catchError(this.httpErrorHandler)\r\n        );*/\r\n        /*return this.httpClient\r\n        .get(this.awsS3BiographiesRestUrl + nomFichier, this.httpOptionsPdf)\r\n        .pipe(\r\n          retry(3),\r\n          catchError(this.httpErrorHandler)\r\n      );*/\r\n        /*const httpOptions = {\r\n          responseType: 'blob' as 'json'\r\n        };*/\r\n        /*const url = `${this.awsS3BiographiesRestUrl}${nomFichier}`;\r\n        return this.httpClient.get<Object>(url, this.httpOptionsPdf);*/\r\n        //return this.httpClient.get(this.awsS3BiographiesRestUrl + nomFichier, httpOptions);\r\n        /*this.httpClient\r\n        .get(this.awsS3BiographiesRestUrl + nomFichier, {\r\n         // responseType: 'arraybuffer',\r\n          responseType: 'blob' as 'json',\r\n        })\r\n        .subscribe(async (response) => {\r\n          let blob = new Blob([response], { type: 'application/pdf' });\r\n          let url = window.URL.createObjectURL(blob);\r\n          let pwa = window.open(url);\r\n        });*/\r\n    }\r\n    downLoadFile(data, type) {\r\n        let blob = new Blob([data], { type: type });\r\n        let url = window.URL.createObjectURL(blob);\r\n        let pwa = window.open(url);\r\n        if (!pwa || pwa.closed || typeof pwa.closed == 'undefined') {\r\n            alert('Please disable your Pop-up blocker and try again.');\r\n        }\r\n    }\r\n}\r\nAuteursService.ɵfac = function AuteursService_Factory(t) { return new (t || AuteursService)(i0.ɵɵinject(i1.HttpClient)); };\r\nAuteursService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuteursService, factory: AuteursService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}