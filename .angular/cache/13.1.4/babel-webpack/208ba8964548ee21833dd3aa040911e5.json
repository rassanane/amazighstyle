{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Travail\\\\Angular\\\\Projets-Angular\\\\bibliothque\\\\bibliothque\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuteursService {\n  constructor(httpClient) {\n    this.httpClient = httpClient; //private auteursRestUrl = 'http://localhost:8080/api/auteurs';\n\n    this.auteursRestUrl = 'http://localhost:9191/api/auteurs';\n    this.awsS3BiographiesRestUrl = 'http://localhost:9191/api/s3documents/biblio-biographies/download/'; //Pour déployer dans mon serveur\n    //private auteursRestUrl = 'http://192.168.1.92:9192/api/auteurs';\n    //Pour déployer dans le cloud aws\n    //private auteursRestUrl = 'http://54.211.191.64:9192/api/auteurs';\n    //private auteursRestUrl = 'http://BIBLIO-BACK-PUBLIC-LOAD-BALANCER-1599167438.us-east-1.elb.amazonaws.com/api/auteurs';\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        //'Access-Control-Allow-Origin':'*',\n        //'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n        'Authorization': 'Basic ' + btoa('rachid:rachid123')\n      })\n    };\n  }\n\n  httpErrorHandler(error) {\n    if (error.error instanceof ErrorEvent) {\n      console.error(\"Erreur côté client : \" + error.message);\n    } else {\n      console.error(\"Erreur côté serveur. Le code de l'erreur : \" + error.status + \" et l'erreur retournée : \" + error.message);\n    }\n\n    return throwError(\"Erreur lors de l'appel du service\");\n  }\n\n  getAuteurs() {\n    return this.httpClient.get(this.auteursRestUrl, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  getAuteur(id) {\n    return this.httpClient.get(this.auteursRestUrl + \"/\" + id, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  ajoutAuteur(auteur) {\n    return this.httpClient.post(this.auteursRestUrl + \"/ajout\", auteur, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  majAuteur(auteur) {\n    return this.httpClient.put(this.auteursRestUrl + \"/modification\", auteur, this.httpOptions).pipe(retry(3), catchError(this.httpErrorHandler));\n  }\n\n  supprimeAuteur(auteur) {\n    const id = typeof auteur == 'number' ? auteur : auteur.id;\n    const url = `${this.auteursRestUrl}/suppression/${id}`;\n    return this.httpClient.delete(url, this.httpOptions);\n  }\n\n  getBiographie(nomFichier) {\n    /*return this.httpClient.get<Auteur>(this.awsRestUrl + \"/biblio-biographies/download/\" + nomFichier, this.httpOptions)\r\n    .pipe(\r\n        retry(3),\r\n        catchError(this.httpErrorHandler)\r\n    );*/\n\n    /*return this.httpClient\r\n    .get(this.awsRestUrl + \"/biblio-biographies/download/\" + nomFichier, {\r\n      responseType: 'arraybuffer',\r\n    })\r\n    .subscribe(async (response) => {\r\n      let blob = new Blob([response], { type: 'application/pdf' });\r\n      let url = window.URL.createObjectURL(blob);\r\n      let pwa = window.open(url);\r\n    });*/\n\n    /*const httpOptions = {\r\n      responseType: 'blob' as 'json'\r\n    };\r\n            const url = `${this.awsS3BiographiesRestUrl}${nomFichier}`;\r\n    return this.httpClient.get<Object>(url, this.httpOptions);*/\n    //return this.httpClient.get(this.awsS3BiographiesRestUrl + nomFichier, httpOptions);\n    this.httpClient.get(this.awsS3BiographiesRestUrl + nomFichier, {\n      responseType: 'arraybuffer'\n    }).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        let blob = new Blob([response], {\n          type: 'application/pdf'\n        });\n        let url = window.URL.createObjectURL(blob);\n        let pwa = window.open(url);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n}\n\nAuteursService.ɵfac = function AuteursService_Factory(t) {\n  return new (t || AuteursService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuteursService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuteursService,\n  factory: AuteursService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/Travail/Angular/Projets-Angular/bibliothque/bibliothque/src/app/auteurs.service.ts"],"names":["throwError","catchError","retry","HttpHeaders","i0","i1","AuteursService","constructor","httpClient","auteursRestUrl","awsS3BiographiesRestUrl","httpOptions","headers","btoa","httpErrorHandler","error","ErrorEvent","console","message","status","getAuteurs","get","pipe","getAuteur","id","ajoutAuteur","auteur","post","majAuteur","put","supprimeAuteur","url","delete","getBiographie","nomFichier","responseType","subscribe","response","blob","Blob","type","window","URL","createObjectURL","pwa","open","ɵfac","AuteursService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class AuteursService {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n        //private auteursRestUrl = 'http://localhost:8080/api/auteurs';\r\n        this.auteursRestUrl = 'http://localhost:9191/api/auteurs';\r\n        this.awsS3BiographiesRestUrl = 'http://localhost:9191/api/s3documents/biblio-biographies/download/';\r\n        //Pour déployer dans mon serveur\r\n        //private auteursRestUrl = 'http://192.168.1.92:9192/api/auteurs';\r\n        //Pour déployer dans le cloud aws\r\n        //private auteursRestUrl = 'http://54.211.191.64:9192/api/auteurs';\r\n        //private auteursRestUrl = 'http://BIBLIO-BACK-PUBLIC-LOAD-BALANCER-1599167438.us-east-1.elb.amazonaws.com/api/auteurs';\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json',\r\n                //'Access-Control-Allow-Origin':'*',\r\n                //'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n                'Authorization': 'Basic ' + btoa('rachid:rachid123')\r\n            })\r\n        };\r\n    }\r\n    httpErrorHandler(error) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            console.error(\"Erreur côté client : \" + error.message);\r\n        }\r\n        else {\r\n            console.error(\"Erreur côté serveur. Le code de l'erreur : \" + error.status + \" et l'erreur retournée : \" + error.message);\r\n        }\r\n        return throwError(\"Erreur lors de l'appel du service\");\r\n    }\r\n    getAuteurs() {\r\n        return this.httpClient.get(this.auteursRestUrl, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    getAuteur(id) {\r\n        return this.httpClient.get(this.auteursRestUrl + \"/\" + id, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    ajoutAuteur(auteur) {\r\n        return this.httpClient.post(this.auteursRestUrl + \"/ajout\", auteur, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    majAuteur(auteur) {\r\n        return this.httpClient.put(this.auteursRestUrl + \"/modification\", auteur, this.httpOptions)\r\n            .pipe(retry(3), catchError(this.httpErrorHandler));\r\n    }\r\n    supprimeAuteur(auteur) {\r\n        const id = typeof auteur == 'number' ? auteur : auteur.id;\r\n        const url = `${this.auteursRestUrl}/suppression/${id}`;\r\n        return this.httpClient.delete(url, this.httpOptions);\r\n    }\r\n    getBiographie(nomFichier) {\r\n        /*return this.httpClient.get<Auteur>(this.awsRestUrl + \"/biblio-biographies/download/\" + nomFichier, this.httpOptions)\r\n        .pipe(\r\n            retry(3),\r\n            catchError(this.httpErrorHandler)\r\n        );*/\r\n        /*return this.httpClient\r\n        .get(this.awsRestUrl + \"/biblio-biographies/download/\" + nomFichier, {\r\n          responseType: 'arraybuffer',\r\n        })\r\n        .subscribe(async (response) => {\r\n          let blob = new Blob([response], { type: 'application/pdf' });\r\n          let url = window.URL.createObjectURL(blob);\r\n          let pwa = window.open(url);\r\n        });*/\r\n        /*const httpOptions = {\r\n          responseType: 'blob' as 'json'\r\n        };\r\n      \r\n        const url = `${this.awsS3BiographiesRestUrl}${nomFichier}`;\r\n        return this.httpClient.get<Object>(url, this.httpOptions);*/\r\n        //return this.httpClient.get(this.awsS3BiographiesRestUrl + nomFichier, httpOptions);\r\n        this.httpClient\r\n            .get(this.awsS3BiographiesRestUrl + nomFichier, {\r\n            responseType: 'arraybuffer',\r\n        })\r\n            .subscribe(async (response) => {\r\n            let blob = new Blob([response], { type: 'application/pdf' });\r\n            let url = window.URL.createObjectURL(blob);\r\n            let pwa = window.open(url);\r\n        });\r\n    }\r\n}\r\nAuteursService.ɵfac = function AuteursService_Factory(t) { return new (t || AuteursService)(i0.ɵɵinject(i1.HttpClient)); };\r\nAuteursService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuteursService, factory: AuteursService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}